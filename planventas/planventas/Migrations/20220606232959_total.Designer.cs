// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using planventas.Models.DBContext;

namespace planventas.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220606232959_total")]
    partial class Total
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("planventas.Data.Pos_Entrenador", b =>
                {
                    b.Property<long>("Cod_Entrenador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Cod_Instalacion")
                        .HasColumnType("bigint");

                    b.Property<string>("Des_Perfil")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Dir_Imagen")
                        .IsRequired()
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime?>("Fecha_Borra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo_Borra")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nom_Entrenador")
                        .IsRequired()
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Usuario_Borra")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario_Registro")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Cod_Entrenador");

                    b.HasIndex("Cod_Instalacion");

                    b.ToTable("Pos_Entrenadores");
                });

            modelBuilder.Entity("planventas.Data.Pos_Instalacion", b =>
                {
                    b.Property<long>("Cod_Instalacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Cod_TipoInstalacion")
                        .HasColumnType("bigint");

                    b.Property<string>("Des_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Des_Instalacion")
                        .IsRequired()
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Dir_Imagenes")
                        .IsRequired()
                        .HasColumnType("varchar(900)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime?>("Fecha_Borra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo_Borra")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Num_Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Usuario_Borra")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario_Registro")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Cod_Instalacion");

                    b.HasIndex("Cod_TipoInstalacion");

                    b.ToTable("Pos_Instalaciones");
                });

            modelBuilder.Entity("planventas.Data.Pos_Servicio", b =>
                {
                    b.Property<long>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("CodDia")
                        .HasColumnType("int");

                    b.Property<long>("Cod_Instalacion")
                        .HasColumnType("bigint");

                    b.Property<int>("Cod_Moneda")
                        .HasColumnType("int");

                    b.Property<int>("Cod_Servicio")
                        .HasColumnType("int");

                    b.Property<int>("Cupos")
                        .HasColumnType("int");

                    b.Property<string>("Des_Servicio")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("varchar(750)");

                    b.Property<string>("Dia")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("money");

                    b.HasKey("IdServicio");

                    b.HasIndex("Cod_Instalacion");

                    b.ToTable("Pos_Servicios");
                });

            modelBuilder.Entity("planventas.Data.Pos_Tipo_Instalacion", b =>
                {
                    b.Property<long>("Cod_TipoInstalacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Des_TipoInstalacion")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime?>("Fecha_Borra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo_Borra")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Usuario_Borra")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario_Registro")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Cod_TipoInstalacion");

                    b.ToTable("Pos_Tipos_Instalacion");
                });

            modelBuilder.Entity("planventas.Data.RmUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario_Registro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rm_Usuarios");
                });

            modelBuilder.Entity("planventas.Data.TemporalSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductIdServicio")
                        .HasColumnType("bigint");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductIdServicio");

                    b.ToTable("Temporal_Sales");
                });

            modelBuilder.Entity("planventas.Data.Pos_Entrenador", b =>
                {
                    b.HasOne("planventas.Data.Pos_Instalacion", "Pos_Instalacion")
                        .WithMany("Entrenadores")
                        .HasForeignKey("Cod_Instalacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pos_Instalacion");
                });

            modelBuilder.Entity("planventas.Data.Pos_Instalacion", b =>
                {
                    b.HasOne("planventas.Data.Pos_Tipo_Instalacion", "Pos_Tipo_Instalacion")
                        .WithMany("Instalaciones")
                        .HasForeignKey("Cod_TipoInstalacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pos_Tipo_Instalacion");
                });

            modelBuilder.Entity("planventas.Data.Pos_Servicio", b =>
                {
                    b.HasOne("planventas.Data.Pos_Instalacion", "Pos_Instalacion")
                        .WithMany("Servicios")
                        .HasForeignKey("Cod_Instalacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pos_Instalacion");
                });

            modelBuilder.Entity("planventas.Data.TemporalSale", b =>
                {
                    b.HasOne("planventas.Data.Pos_Servicio", "Product")
                        .WithMany()
                        .HasForeignKey("ProductIdServicio");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("planventas.Data.Pos_Instalacion", b =>
                {
                    b.Navigation("Entrenadores");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("planventas.Data.Pos_Tipo_Instalacion", b =>
                {
                    b.Navigation("Instalaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
